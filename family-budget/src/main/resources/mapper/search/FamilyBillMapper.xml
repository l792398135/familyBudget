<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.finance.mapper.FamilyBillMapper">
    
    <resultMap type="FamilyBill" id="FamilyBillResult">
        <result property="id"    column="id"    />
        <result property="billName"    column="bill_name"    />
        <result property="billAmount"    column="bill_amount"    />
        <result property="billAdd"    column="bill_add"    />
        <result property="remark"    column="remark"    />
        <result property="status"    column="status"    />
        <result property="createUser"    column="create_user"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectFamilyBillVo">
        select id, bill_name, bill_amount, bill_add, remark, status, create_user, create_time from family_bill
    </sql>

    <select id="selectFamilyBillList" parameterType="FamilyBill" resultMap="FamilyBillResult">
        <include refid="selectFamilyBillVo"/>
        <where>  
            <if test="billName != null  and billName != ''"> and bill_name like concat('%', #{billName}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="createUser != null  and createUser != ''"> and create_user = #{createUser}</if>
        </where> order by id desc
    </select>
    
    <select id="selectFamilyBillById" parameterType="Long" resultMap="FamilyBillResult">
        <include refid="selectFamilyBillVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertFamilyBill" parameterType="FamilyBill" useGeneratedKeys="true" keyProperty="id">
        insert into family_bill
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="billName != null">bill_name,</if>
            <if test="billAmount != null">bill_amount,</if>
            <if test="billAdd != null">bill_add,</if>
            <if test="remark != null">remark,</if>
            <if test="status != null">status,</if>
            <if test="createUser != null">create_user,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="billName != null">#{billName},</if>
            <if test="billAmount != null">#{billAmount},</if>
            <if test="billAdd != null">#{billAdd},</if>
            <if test="remark != null">#{remark},</if>
            <if test="status != null">#{status},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateFamilyBill" parameterType="FamilyBill">
        update family_bill
        <trim prefix="SET" suffixOverrides=",">
            <if test="billName != null">bill_name = #{billName},</if>
            <if test="billAmount != null">bill_amount = #{billAmount},</if>
            <if test="billAdd != null">bill_add = #{billAdd},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteFamilyBillById" parameterType="Long">
        delete from family_bill where id = #{id}
    </delete>

    <delete id="deleteFamilyBillByIds" parameterType="String">
        delete from family_bill where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>